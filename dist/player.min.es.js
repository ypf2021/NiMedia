class e{constructor(){this.$events={}}emit(e,...i){this.$events[e]&&this.$events[e].forEach(((e,t)=>{e.call(this,...i)}))}on(e,i){this.$events[e]=this.$events[e]||[],this.$events[e].push(i)}}function i(e){throw new Error(e)}const t={"video-container":"player_video-container__I9fU2","video-wrapper":"player_video-wrapper__tN3j3","video-controls":"toolbar_video-controls__wzQC1","video-controls-hidden":"","video-progress":"progress_video-progress__DMF70","video-pretime":"progress_video-pretime__gDMzS","video-buffered":"pregress_video-buffered__xlu1O","video-completed":"pregress_video-completed__j0yvy","video-dot":"pregress_video-dot__u2nX7","video-dot-hidden":"pregress_video-dot-hidden__S-oLG","video-play":"controller_video-play__aWE0Y","video-subplay":"controller_video-subplay__ywUzK","video-start-pause":"controller_video-start-pause__JnB3x","video-duration":"controller_video-duration__8upHt","video-duration-completed":"controller_video-duration-completed__PYm69","video-settings":"controller_video-settings__SiNyl","video-subsettings":"controller_video-subsettings__6Jtl7","video-volume":"controller_video-volume__R8ory","video-volume-progress":"controller_video-volume-progress__9FkAX","video-volume-completed":"controller_video-volume-completed__zwRNX","video-volume-dot":"pregress_video-dot__giuCI","video-fullscreen":"controller_video-fullscreen__ZLYIr","video-duration-all":"controller_video-duration-all__gGLip","loading-mask":"","loading-container":"","loading-item":"","loading-title":"","error-mask":"","error-container":"","error-item":"","error-title":""},n={iconfont:"","icon-bofang":"","icon-shezhi":"","icon-yinliang":"","icon-quanping":"","icon-cuowutishi":"","icon-zanting":""};class o extends e{constructor(e){super(),this.container=e,this.init()}get template(){return this.template_}init(){this.template_=`\n            <div class="${t["video-play"]}">\n                <div class="${t["video-subplay"]}">\n                    <div class="${t["video-start-pause"]}">\n                        <i class="${n.iconfont} ${n["icon-bofang"]}"></i>\n                    </div>\n                    <div class="${t["video-duration"]}">\n                        <span class="${t["video-duration-completed"]}">00:00</span>&nbsp;/&nbsp;<span class="${t["video-duration-all"]}">00:00</span>\n                    </div>\n                </div>\n                <div class="${t["video-settings"]}">\n                    <div class="${t["video-subsettings"]}">\n                        <i class="${n.iconfont} ${n["icon-shezhi"]}"></i>\n                    </div>\n                    <div class="${t["video-volume"]}">\n                        <i class="${n.iconfont} ${n["icon-yinliang"]}"></i>\n                        <div class="${t["video-volume-progress"]}">\n                            <div class="${t["video-volume-completed"]}"></div>\n                            <div class="${t["video-volume-dot"]}"></div>\n                        </div>\n                    </div>\n                    <div class="${t["video-fullscreen"]}">\n                        <i class="${n.iconfont} ${n["icon-quanping"]}"></i>\n                    </div>\n                </div>\n            </div>\n        `,this.videoPlayBtn=this.container.querySelector(`.${t["video-start-pause"]} i`),this.currentTime=this.container.querySelector(`.${t["video-duration-completed"]}`),this.summaryTime=this.container.querySelector(`.${t["video-duration-all"]}`)}initEvent(){this.on("play",(()=>{this.videoPlayBtn.className=`${n.iconfont} ${n["icon-zanting"]}`})),this.on("pause",(()=>{this.videoPlayBtn.className=`${n.iconfont} ${n["icon-bofang"]}`}))}}class s{constructor(e){this.container=e,this.init()}init(){this.template_=this.generateErrorMask()}get template(){return this.template_}generateErrorMask(){let e=document.createElement("div");e.className=t["error-mask"];let i=document.createElement("div");i.className=t["error-container"];let o=document.createElement("div");o.className=t["error-item"];let s=document.createElement("i");s.className=`${n.iconfont} ${n["icon-cuowutishi"]}`,o.appendChild(s);let a=document.createElement("div");return a.className=t["error-title"],a.innerText="视频加载发生错误",i.appendChild(o),i.appendChild(a),e.appendChild(i),e}addErrorMask(){[...this.container.children].includes(this.template)||this.container.appendChild(this.template)}removeErrorMask(){[...this.container.children].includes(this.template)&&this.container.removeChild(this.template)}}class a{constructor(e){this.container=e,this.init()}get template(){return this.template_}init(){this.template_=this.generateLoadingMask()}generateLoadingMask(){let e=document.createElement("div");e.className=t["loading-mask"];let i=document.createElement("div");i.className=t["loading-container"];let n=document.createElement("div");n.className=t["loading-item"];let o=document.createElement("div");return o.className=t["loading-title"],o.innerText="视频正在努力加载中...",i.appendChild(n),i.appendChild(o),e.appendChild(i),e}addLoadingMask(){[...this.container.children].includes(this.template)||this.container.appendChild(this.template)}removeLoadingMask(){[...this.container.children].includes(this.template)&&this.container.removeChild(this.template)}}class r{constructor(){this.init()}get template(){return this.template_}init(){this.template_=`\n            <div class="${t["video-progress"]}">\n                <div class="${t["video-pretime"]}">00:00</div>\n                <div class="${t["video-buffered"]}"></div>\n                <div class="${t["video-completed"]} "></div>\n                <div class="${t["video-dot"]} ${t["video-dot-hidden"]}"></div>\n            </div>\n        `}}class l extends e{constructor(e){super(),this.container=e,this.init(),this.initComponent(),this.initTemplate(),this.initEvent()}get template(){return this.template_}init(){}initComponent(){this.progress=new r,this.controller=new o(this.container)}initTemplate(){let e=document.createElement("div");e.className=`${t["video-controls"]} ${t["video-controls-hidden"]}`,e.innerHTML+=this.progress.template,e.innerHTML+=this.controller.template,this.template_=e}initEvent(){this.on("play",(()=>{this.controller.emit("play")})),this.on("pause",(()=>{this.controller.emit("pause")}))}}class d extends e{constructor(e){super(),this.playerOptions={url:"",autoplay:!1,width:"100%",height:"100%"},this.playerOptions=Object.assign(this.playerOptions,e),this.init(),this.initComponent(),this.initContainer(),this.initEvent()}init(){let e=this.playerOptions.container;this.isTagValidate(e)||i("你传入的容器的元素类型不适合，建议传入块元素或者行内块元素，拒绝传入具有交互类型的元素例如input框等表单类型的元素"),this.container=e}initComponent(){let e=new l(this.container);this.toolbar=e}initContainer(){this.container.style.width=this.playerOptions.width,this.container.style.height=this.playerOptions.height,this.container.className=t["video-container"],this.container.innerHTML=`\n            <div class="${t["video-wrapper"]}">\n            <video>\n                <source src="${this.playerOptions.url}" type="video/mp4">\n                你的浏览器暂不支持HTML5标签,非常抱歉\n                </source>\n            </video>\n            </div>\n        `,this.container.appendChild(this.toolbar.template),this.video=this.container.querySelector("video")}initEvent(){this.container.onclick=e=>{e.target==this.video&&(this.video.paused?this.video.play():this.video.played&&this.video.pause())},this.video.onplay=e=>{this.toolbar.emit("play")},this.video.onpause=e=>{this.toolbar.emit("pause")},this.video.onwaiting=e=>{}}isTagValidate(e){return"block"===window.getComputedStyle(e).display||"inline"!==window.getComputedStyle(e).display&&("inline-block"!==window.getComputedStyle(e).display||!(e instanceof HTMLImageElement||e instanceof HTMLAudioElement||e instanceof HTMLVideoElement||e instanceof HTMLInputElement||e instanceof HTMLCanvasElement||e instanceof HTMLButtonElement))}}console.log("hello");export{i as $warn,e as BaseEvent,o as Controller,s as ErrorMask,a as LoadingMask,d as Player,r as Progress,l as ToolBar,n as icon,t as styles};
